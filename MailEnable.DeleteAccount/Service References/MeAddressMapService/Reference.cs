//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MailEnable.DeleteAccount.MeAddressMapService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", ConfigurationName="MeAddressMapService.AddressMapSoap")]
    public interface AddressMapSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/AddAddressMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long AddAddressMap(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/AddAddressMap", ReplyAction="*")]
        System.Threading.Tasks.Task<long> AddAddressMapAsync(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/GetAddressMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        long GetAddressMap(string AccountName, string SourceAddress, string Scope, long Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/GetAddressMap", ReplyAction="*")]
        System.Threading.Tasks.Task<long> GetAddressMapAsync(string AccountName, string SourceAddress, string Scope, long Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/ListAddressMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MarshalByRefObject))]
        MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapResponse ListAddressMap(MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/ListAddressMap", ReplyAction="*")]
        System.Threading.Tasks.Task<MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapResponse> ListAddressMapAsync(MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/GetAddressMapObjectProperties", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MarshalByRefObject))]
        MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesResponse GetAddressMapObjectProperties(MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/GetAddressMapObjectProperties", ReplyAction="*")]
        System.Threading.Tasks.Task<MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesResponse> GetAddressMapObjectPropertiesAsync(MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/RemoveAddressMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MarshalByRefObject))]
        long RemoveAddressMap(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/RemoveAddressMap", ReplyAction="*")]
        System.Threading.Tasks.Task<long> RemoveAddressMapAsync(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/EditAddressMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MarshalByRefObject))]
        long EditAddressMap(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status, string NewAccountName, string NewSourceAddress, string NewDestinationAddress, string NewScope, long NewStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mailenable.com/MEWebAdminService/AddressMap/EditAddressMap", ReplyAction="*")]
        System.Threading.Tasks.Task<long> EditAddressMapAsync(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status, string NewAccountName, string NewSourceAddress, string NewDestinationAddress, string NewScope, long NewStatus);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap")]
    public partial class AddressMap : MarshalByRefObject {
        
        private string accountField;
        
        private string sourceAddressField;
        
        private string destinationAddressField;
        
        private int statusField;
        
        private string scopeField;
        
        private string hostField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
                this.RaisePropertyChanged("Account");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SourceAddress {
            get {
                return this.sourceAddressField;
            }
            set {
                this.sourceAddressField = value;
                this.RaisePropertyChanged("SourceAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DestinationAddress {
            get {
                return this.destinationAddressField;
            }
            set {
                this.destinationAddressField = value;
                this.RaisePropertyChanged("DestinationAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Scope {
            get {
                return this.scopeField;
            }
            set {
                this.scopeField = value;
                this.RaisePropertyChanged("Scope");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
                this.RaisePropertyChanged("Host");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressMap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap")]
    public abstract partial class MarshalByRefObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListAddressMap", WrapperNamespace="http://mailenable.com/MEWebAdminService/AddressMap", IsWrapped=true)]
    public partial class ListAddressMapRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=0)]
        public MailEnable.DeleteAccount.MeAddressMapService.AddressMap[] ObjectList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=1)]
        public string AccountName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=2)]
        public string SourceAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=3)]
        public string DestinationAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=4)]
        public string Scope;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=5)]
        public long Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=6)]
        public long Top;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=7)]
        public long MaxLength;
        
        public ListAddressMapRequest() {
        }
        
        public ListAddressMapRequest(MailEnable.DeleteAccount.MeAddressMapService.AddressMap[] ObjectList, string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status, long Top, long MaxLength) {
            this.ObjectList = ObjectList;
            this.AccountName = AccountName;
            this.SourceAddress = SourceAddress;
            this.DestinationAddress = DestinationAddress;
            this.Scope = Scope;
            this.Status = Status;
            this.Top = Top;
            this.MaxLength = MaxLength;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListAddressMapResponse", WrapperNamespace="http://mailenable.com/MEWebAdminService/AddressMap", IsWrapped=true)]
    public partial class ListAddressMapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=0)]
        public long ListAddressMapResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=1)]
        public MailEnable.DeleteAccount.MeAddressMapService.AddressMap[] ObjectList;
        
        public ListAddressMapResponse() {
        }
        
        public ListAddressMapResponse(long ListAddressMapResult, MailEnable.DeleteAccount.MeAddressMapService.AddressMap[] ObjectList) {
            this.ListAddressMapResult = ListAddressMapResult;
            this.ObjectList = ObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAddressMapObjectProperties", WrapperNamespace="http://mailenable.com/MEWebAdminService/AddressMap", IsWrapped=true)]
    public partial class GetAddressMapObjectPropertiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=0)]
        public string AccountName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=1)]
        public string SourceAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=2)]
        public string DestinationAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=3)]
        public string Scope;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=4)]
        public long Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=5)]
        public MailEnable.DeleteAccount.MeAddressMapService.AddressMap ObjectProperties;
        
        public GetAddressMapObjectPropertiesRequest() {
        }
        
        public GetAddressMapObjectPropertiesRequest(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status, MailEnable.DeleteAccount.MeAddressMapService.AddressMap ObjectProperties) {
            this.AccountName = AccountName;
            this.SourceAddress = SourceAddress;
            this.DestinationAddress = DestinationAddress;
            this.Scope = Scope;
            this.Status = Status;
            this.ObjectProperties = ObjectProperties;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAddressMapObjectPropertiesResponse", WrapperNamespace="http://mailenable.com/MEWebAdminService/AddressMap", IsWrapped=true)]
    public partial class GetAddressMapObjectPropertiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=0)]
        public long GetAddressMapObjectPropertiesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://mailenable.com/MEWebAdminService/AddressMap", Order=1)]
        public MailEnable.DeleteAccount.MeAddressMapService.AddressMap ObjectProperties;
        
        public GetAddressMapObjectPropertiesResponse() {
        }
        
        public GetAddressMapObjectPropertiesResponse(long GetAddressMapObjectPropertiesResult, MailEnable.DeleteAccount.MeAddressMapService.AddressMap ObjectProperties) {
            this.GetAddressMapObjectPropertiesResult = GetAddressMapObjectPropertiesResult;
            this.ObjectProperties = ObjectProperties;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AddressMapSoapChannel : MailEnable.DeleteAccount.MeAddressMapService.AddressMapSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddressMapSoapClient : System.ServiceModel.ClientBase<MailEnable.DeleteAccount.MeAddressMapService.AddressMapSoap>, MailEnable.DeleteAccount.MeAddressMapService.AddressMapSoap {
        
        public AddressMapSoapClient() {
        }
        
        public AddressMapSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddressMapSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressMapSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressMapSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long AddAddressMap(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status) {
            return base.Channel.AddAddressMap(AccountName, SourceAddress, DestinationAddress, Scope, Status);
        }
        
        public System.Threading.Tasks.Task<long> AddAddressMapAsync(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status) {
            return base.Channel.AddAddressMapAsync(AccountName, SourceAddress, DestinationAddress, Scope, Status);
        }
        
        public long GetAddressMap(string AccountName, string SourceAddress, string Scope, long Status) {
            return base.Channel.GetAddressMap(AccountName, SourceAddress, Scope, Status);
        }
        
        public System.Threading.Tasks.Task<long> GetAddressMapAsync(string AccountName, string SourceAddress, string Scope, long Status) {
            return base.Channel.GetAddressMapAsync(AccountName, SourceAddress, Scope, Status);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapResponse MailEnable.DeleteAccount.MeAddressMapService.AddressMapSoap.ListAddressMap(MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapRequest request) {
            return base.Channel.ListAddressMap(request);
        }
        
        public long ListAddressMap(ref MailEnable.DeleteAccount.MeAddressMapService.AddressMap[] ObjectList, string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status, long Top, long MaxLength) {
            MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapRequest inValue = new MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapRequest();
            inValue.ObjectList = ObjectList;
            inValue.AccountName = AccountName;
            inValue.SourceAddress = SourceAddress;
            inValue.DestinationAddress = DestinationAddress;
            inValue.Scope = Scope;
            inValue.Status = Status;
            inValue.Top = Top;
            inValue.MaxLength = MaxLength;
            MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapResponse retVal = ((MailEnable.DeleteAccount.MeAddressMapService.AddressMapSoap)(this)).ListAddressMap(inValue);
            ObjectList = retVal.ObjectList;
            return retVal.ListAddressMapResult;
        }
        
        public System.Threading.Tasks.Task<MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapResponse> ListAddressMapAsync(MailEnable.DeleteAccount.MeAddressMapService.ListAddressMapRequest request) {
            return base.Channel.ListAddressMapAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesResponse MailEnable.DeleteAccount.MeAddressMapService.AddressMapSoap.GetAddressMapObjectProperties(MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesRequest request) {
            return base.Channel.GetAddressMapObjectProperties(request);
        }
        
        public long GetAddressMapObjectProperties(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status, ref MailEnable.DeleteAccount.MeAddressMapService.AddressMap ObjectProperties) {
            MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesRequest inValue = new MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesRequest();
            inValue.AccountName = AccountName;
            inValue.SourceAddress = SourceAddress;
            inValue.DestinationAddress = DestinationAddress;
            inValue.Scope = Scope;
            inValue.Status = Status;
            inValue.ObjectProperties = ObjectProperties;
            MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesResponse retVal = ((MailEnable.DeleteAccount.MeAddressMapService.AddressMapSoap)(this)).GetAddressMapObjectProperties(inValue);
            ObjectProperties = retVal.ObjectProperties;
            return retVal.GetAddressMapObjectPropertiesResult;
        }
        
        public System.Threading.Tasks.Task<MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesResponse> GetAddressMapObjectPropertiesAsync(MailEnable.DeleteAccount.MeAddressMapService.GetAddressMapObjectPropertiesRequest request) {
            return base.Channel.GetAddressMapObjectPropertiesAsync(request);
        }
        
        public long RemoveAddressMap(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status) {
            return base.Channel.RemoveAddressMap(AccountName, SourceAddress, DestinationAddress, Scope, Status);
        }
        
        public System.Threading.Tasks.Task<long> RemoveAddressMapAsync(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status) {
            return base.Channel.RemoveAddressMapAsync(AccountName, SourceAddress, DestinationAddress, Scope, Status);
        }
        
        public long EditAddressMap(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status, string NewAccountName, string NewSourceAddress, string NewDestinationAddress, string NewScope, long NewStatus) {
            return base.Channel.EditAddressMap(AccountName, SourceAddress, DestinationAddress, Scope, Status, NewAccountName, NewSourceAddress, NewDestinationAddress, NewScope, NewStatus);
        }
        
        public System.Threading.Tasks.Task<long> EditAddressMapAsync(string AccountName, string SourceAddress, string DestinationAddress, string Scope, long Status, string NewAccountName, string NewSourceAddress, string NewDestinationAddress, string NewScope, long NewStatus) {
            return base.Channel.EditAddressMapAsync(AccountName, SourceAddress, DestinationAddress, Scope, Status, NewAccountName, NewSourceAddress, NewDestinationAddress, NewScope, NewStatus);
        }
    }
}
